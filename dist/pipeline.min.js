!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).PipelineJS={})}(this,(function(e){"use strict";var t=new class{format(e,t){return`[Pipeline-JS] [${t.toUpperCase()}]: ${e}`}error(e,t=!1){const s=this.format(e,"error");if(t)throw Error(s);console.error(s)}warn(e){console.warn(this.format(e,"warn"))}info(e){console.info(this.format(e,"info"))}};class s{callbacks={};init(e){e&&!this.callbacks[e]&&(this.callbacks[e]=[])}checkListener(e){if("function"!=typeof e)throw new TypeError("The listener must be a function")}hasEvent(e){return void 0!==this.callbacks[e]}listeners(){return this.callbacks}addListener(e,t){return this.on(e,t)}clearListener(e){return e?this.callbacks[e]=[]:this.callbacks={},this}on(e,t){return this.checkListener(t),this.init(e),this.callbacks[e].push(t),this}off(e,t){this.checkListener(t);const s=e;return this.init(),this.callbacks[s]&&0!==this.callbacks[s].length?(this.callbacks[s]=this.callbacks[s].filter((e=>e!=t)),this):this}emit(e,...t){const s=e;if(this.init(s),this.callbacks[s].length<=0)return!1;const r=this.callbacks[s].map((e=>{try{const s=e(...t);return s instanceof Promise?s:Promise.resolve(s)}catch(e){return console.error(`Error in event listener for event: ${s}`,e),Promise.resolve()}}));return!r.some((e=>e instanceof Promise))||Promise.all(r).then((()=>!0)).catch((e=>(console.error(`Error handling promises for event: ${s}`,e),!1)))}once(e,t){this.checkListener(t);const s=(...r)=>{const i=t(...r);return this.off(e,s),i instanceof Promise?i:Promise.resolve(i)};return this.on(e,s)}}function r(e,t){if(typeof e!=typeof t)return!1;if(null===e||null===t)return e===t;if("object"!=typeof e||"object"!=typeof t||null===e||null===t)return e===t;if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(Array.isArray(e)&&Array.isArray(t))return e.length===t.length&&e.every(((e,s)=>r(e,t[s])));if(Array.isArray(e)||Array.isArray(t))return!1;if(e instanceof Set&&t instanceof Set){if(e.size!==t.size)return!1;for(const s of e)if(!t.has(s))return!1;return!0}if(e instanceof Map&&t instanceof Map){if(e.size!==t.size)return!1;for(const[s,i]of e)if(!r(i,t.get(s)))return!1;return!0}if(Object.getPrototypeOf(e)!==Object.getPrototypeOf(t))return!1;const s=Reflect.ownKeys(e),i=Reflect.ownKeys(t);if(s.length!==i.length)return!1;for(const i of s)if(!r(e[i],t[i]))return!1;return!0}e.Pipeline=class extends s{_steps=new Map;cache=new Map;lastProcessorIndexUpdated=-1;constructor(e){super(),e&&e.forEach((e=>this.register(e)))}clearCache(){this.cache=new Map,this.lastProcessorIndexUpdated=-1}register(e,t=-1){if(!e)throw Error("Processor is not defined");if(null===e.type)throw Error("Processor type is not defined");if(this.findProcessorIndexByID(e.id)>-1)throw Error(`Processor ID ${e.id} is already defined`);return e.on("propsUpdated",this.processorPropsUpdated.bind(this,e)),this.addProcessorByPriority(e,t),this.afterRegistered(e),e}tryRegister(e,t){try{return this.register(e,t)}catch(e){return}}unregister(e){if(!e)return;if(-1===this.findProcessorIndexByID(e.id))return;const t=this._steps.get(e.type);t&&t.length&&(this._steps.set(e.type,t.filter((t=>t.id!==e.id))),e.off("propsUpdated",this.processorPropsUpdated.bind(this,e)),this.emit("updated",e))}addProcessorByPriority(e,t=-1){let s=this._steps.get(e.type);if(!s){const t=[];this._steps.set(e.type,t),s=t}t<0||t>=s.length?s.push(e):s.splice(t,0,e)}get steps(){let e=[];for(const t of this.getSortedProcessorTypes()){const s=this._steps.get(t);s&&s.length&&(e=e.concat(s))}return e.filter((e=>e))}getStepsByType(e){return this.steps.filter((t=>t.type===e))}getSortedProcessorTypes(){return Array.from(this._steps.keys())}async process(e){const s=this.lastProcessorIndexUpdated,r=this.steps;let i=e;try{for(const e of r){this.findProcessorIndexByID(e.id)>=s?(i=await e.process(i),this.cache.set(e.id,i)):(i=this.cache.get(e.id),void 0===i&&(i=await e.process(i)))}}catch(e){throw t.error(e),this.emit("error",i),e}return this.lastProcessorIndexUpdated=r.length,this.emit("afterProcess",i),i}clearProcessors(){this._steps.clear(),this.clearCache()}getProcessorByID(e){const t=this.findProcessorIndexByID(e);return t>-1?this.steps[t]:null}findProcessorIndexByID(e){return this.steps.findIndex((t=>t.id==e))}async runProcessorByID(e,t,s=!0){const r=this.findProcessorIndexByID(e);if(-1===r)throw Error(`Processor ID ${e} not found`);return s?(this.lastProcessorIndexUpdated=r,this.clearCacheAfterProcessorIndex(r)):this.cache.delete(e),this.process(t)}clearCacheAfterProcessorIndex(e){this.steps.slice(e).forEach((e=>{this.cache.delete(e.id)}))}setLastProcessorIndex(e){const t=this.findProcessorIndexByID(e.id);this.lastProcessorIndexUpdated>t&&(this.lastProcessorIndexUpdated=t)}processorPropsUpdated(e){this.setLastProcessorIndex(e),this.emit("propsUpdated"),this.emit("updated",e)}afterRegistered(e){this.setLastProcessorIndex(e),this.emit("afterRegister"),this.emit("updated",e)}},e.Processor=class extends s{id;name;static _statusTypes=["idle","running","completed"];_props;_status;constructor(e,t){super(),this._props={},this._status="idle",this.id="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(e=>{const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})),this.name=t,e&&this.setProps(e)}async process(...e){this.validateProps instanceof Function&&this.validateProps(...e),this._status="running",this.emit("beforeProcess",...e);try{const t=await this._process(...e);return this._status="completed",this.emit("afterProcess",...e),t}catch(t){const s=t instanceof Error?t:new Error(String(t));throw this._status="idle",this.emit("error",s,...e),this.emit("afterProcess",...e),s}}setProps(e){const t={...this._props,...e};return r(t,this._props)||(this._props=t,this.emit("propsUpdated",this)),this}get props(){return this._props}get status(){return this._status}},e.version="1.2.8"}));
