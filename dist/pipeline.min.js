!function(t,s){"object"==typeof exports&&"undefined"!=typeof module?s(exports):"function"==typeof define&&define.amd?define(["exports"],s):s((t="undefined"!=typeof globalThis?globalThis:t||self).PipelineJS={})}(this,(function(t){"use strict";var s=new class{format(t,s){return`[Pipeline-JS] [${s.toUpperCase()}]: ${t}`}error(t,s=!1){const e=this.format(t,"error");if(s)throw Error(e);console.error(e)}warn(t){console.warn(this.format(t,"warn"))}info(t){console.info(this.format(t,"info"))}};class e{callbacks={};init(t){t&&!this.callbacks[t]&&(this.callbacks[t]=[])}checkListener(t){if("function"!=typeof t)throw new TypeError("The listener must be a function")}hasEvent(t){return void 0!==this.callbacks[t]}listeners(){return this.callbacks}addListener(t,s){return this.on(t,s)}clearListener(t){return t?this.callbacks[t]=[]:this.callbacks={},this}on(t,s){return this.checkListener(s),this.init(t),this.callbacks[t].push(s),this}off(t,s){this.checkListener(s);const e=t;return this.init(),this.callbacks[e]&&0!==this.callbacks[e].length?(this.callbacks[e]=this.callbacks[e].filter((t=>t!=s)),this):this}async emit(t,...s){const e=t;return this.init(e),this.callbacks[e].length>0&&(await Promise.all(this.callbacks[e].map((async t=>await t(...s)))),!0)}once(t,s){this.checkListener(s);const e=async(...r)=>{await s(...r),this.off(t,e)};return this.on(t,e)}}function r(t,s){if(typeof t!=typeof s)return!1;if(null===t||null===s)return t===s;if("object"!=typeof t&&"object"!=typeof s)return t===s;if(Array.isArray(t)&&Array.isArray(s))return t.length===s.length&&t.every(((t,e)=>r(t,s[e])));if(Array.isArray(t)||Array.isArray(s))return!1;const e=Object.keys(t),i=Object.keys(s);if(e.length!==i.length)return!1;for(const i of e)if(!r(t[i],s[i]))return!1;return!0}t.Pipeline=class extends e{_steps=new Map;cache=new Map;lastProcessorIndexUpdated=-1;constructor(t){super(),t&&t.forEach((t=>this.register(t)))}clearCache(){this.cache=new Map,this.lastProcessorIndexUpdated=-1}register(t,s=-1){if(!t)throw Error("Processor is not defined");if(null===t.type)throw Error("Processor type is not defined");if(this.findProcessorIndexByID(t.id)>-1)throw Error(`Processor ID ${t.id} is already defined`);return t.on("propsUpdated",this.processorPropsUpdated.bind(this,t)),this.addProcessorByPriority(t,s),this.afterRegistered(t),t}tryRegister(t,s){try{return this.register(t,s)}catch(t){return}}unregister(t){if(!t)return;if(-1===this.findProcessorIndexByID(t.id))return;const s=this._steps.get(t.type);s&&s.length&&(this._steps.set(t.type,s.filter((s=>s.id!==t.id))),t.off("propsUpdated",this.processorPropsUpdated.bind(this,t)),this.emit("updated",t))}addProcessorByPriority(t,s=-1){let e=this._steps.get(t.type);if(!e){const s=[];this._steps.set(t.type,s),e=s}s<0||s>=e.length?e.push(t):e.splice(s,0,t)}get steps(){let t=[];for(const s of this.getSortedProcessorTypes()){const e=this._steps.get(s);e&&e.length&&(t=t.concat(e))}return t.filter((t=>t))}getStepsByType(t){return this.steps.filter((s=>s.type===t))}getSortedProcessorTypes(){return Array.from(this._steps.keys())}async process(t){const e=this.lastProcessorIndexUpdated,r=this.steps;let i=t;try{for(const t of r){this.findProcessorIndexByID(t.id)>=e?(i=await t.process(i),this.cache.set(t.id,i)):(i=this.cache.get(t.id),void 0===i&&(i=await t.process(i)))}}catch(t){throw s.error(t),this.emit("error",i),t}return this.lastProcessorIndexUpdated=r.length,this.emit("afterProcess",i),i}clearProcessors(){this._steps.clear(),this.clearCache()}getProcessorByID(t){const s=this.findProcessorIndexByID(t);return s>-1?this.steps[s]:null}findProcessorIndexByID(t){return this.steps.findIndex((s=>s.id==t))}async runProcessorByID(t,s,e=!0){const r=this.findProcessorIndexByID(t);if(-1===r)throw Error(`Processor ID ${t} not found`);return e?(this.lastProcessorIndexUpdated=r,this.clearCacheAfterProcessorIndex(r)):this.cache.delete(t),this.process(s)}clearCacheAfterProcessorIndex(t){this.steps.slice(t).forEach((t=>{this.cache.delete(t.id)}))}setLastProcessorIndex(t){const s=this.findProcessorIndexByID(t.id);this.lastProcessorIndexUpdated>s&&(this.lastProcessorIndexUpdated=s)}processorPropsUpdated(t){this.setLastProcessorIndex(t),this.emit("propsUpdated"),this.emit("updated",t)}afterRegistered(t){this.setLastProcessorIndex(t),this.emit("afterRegister"),this.emit("updated",t)}},t.Processor=class extends e{id;name;static _statusTypes=["idle","running","completed"];_props;_status;constructor(t,s){super(),this._props={},this._status="idle",this.id="xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(t){const s=16*Math.random()|0;return("x"==t?s:3&s|8).toString(16)})),this.name=s,t&&this.setProps(t)}async process(...t){this.validateProps instanceof Function&&this.validateProps(...t),this._status="running",this.emit("beforeProcess",...t);try{const s=await this._process(...t);return this._status="completed",this.emit("afterProcess",...t),s}catch(s){const e=s instanceof Error?s:new Error(String(s));throw this._status="idle",this.emit("error",e,...t),this.emit("afterProcess",...t),e}}setProps(t){const s={...this._props,...t};return r(s,this._props)||(this._props=s,this.emit("propsUpdated",this)),this}get props(){return this._props}get status(){return this._status}},t.version="1.2.7"}));
